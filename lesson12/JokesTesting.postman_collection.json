{
	"info": {
		"_postman_id": "1afd6672-6b9b-44fc-b364-ce56bbaf7448",
		"name": "JokesTesting",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4940405"
	},
	"item": [
		{
			"name": "random_ten",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get ten jokes\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eql(10);\r",
							"    pm.expect(jsonData[0].type).to.be.oneOf(['general', 'programing']);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}random_ten",
					"host": [
						"{{url}}random_ten"
					]
				}
			},
			"response": []
		},
		{
			"name": "ten",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get any number of random jokes\", function () {\r",
							"    const jokesNumber = Number(pm.collectionVariables.get(\"jokesNumber\"));\r",
							"    \r",
							"    var jsonData = pm.response.json();\r",
							"    \r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(jsonData.length).to.be.eql(jokesNumber)\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}jokes/random/{{jokesNumber}}",
					"host": [
						"{{url}}jokes"
					],
					"path": [
						"random",
						"{{jokesNumber}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "types",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check joke types\", function () {\r",
							"    const jokeTypes = [ \"general\", \"knock-knock\", \"programming\", \"dad\" ];\r",
							"    const randomInt = Math.floor(Math.random() * 4);\r",
							"\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.collectionVariables.set(\"randomJokeType\", jsonData[randomInt]);\r",
							"\r",
							"    pm.expect(jsonData).to.be.eql(jokeTypes);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}types",
					"host": [
						"{{url}}types"
					]
				}
			},
			"response": []
		},
		{
			"name": "Grab jokes by type",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}jokes/{{randomJokeType}}/random",
					"host": [
						"{{url}}jokes"
					],
					"path": [
						"{{randomJokeType}}",
						"random"
					]
				}
			},
			"response": []
		},
		{
			"name": "random_joke",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"random_joke schema validation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    const schema = [\"type\", \"setup\", \"punchline\", \"id\"];\r",
							"\r",
							"    if (Array.isArray(jsonData)) {\r",
							"        jsonData.forEach(item => {\r",
							"            schema.forEach(key => {\r",
							"                pm.expect(item).to.have.property(key);\r",
							"            });\r",
							"        });\r",
							"    } else {\r",
							"        schema.forEach(key => {\r",
							"            pm.expect(jsonData).to.have.property(key);\r",
							"        });\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}random_joke",
					"host": [
						"{{url}}random_joke"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "jokesNumber",
			"value": "10",
			"type": "string"
		},
		{
			"key": "randomJokeType",
			"value": ""
		},
		{
			"key": "url",
			"value": "https://official-joke-api.appspot.com/",
			"type": "string"
		}
	]
}